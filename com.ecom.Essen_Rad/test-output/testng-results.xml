<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="8" failed="8" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-27T11:17:10 IST" name="Suite" finished-at="2023-09-27T11:17:14 IST" duration-ms="4002">
    <groups>
    </groups>
    <test started-at="2023-09-27T11:17:10 IST" name="TestRunner-1" finished-at="2023-09-27T11:17:13 IST" duration-ms="2490">
      <class name="com.TestNg.HardAssertionTest">
        <test-method is-config="true" signature="configureBeforeClass()[pri:0, instance:com.TestNg.HardAssertionTest@43bc63a3]" started-at="2023-09-27T11:17:10 IST" name="configureBeforeClass" finished-at="2023-09-27T11:17:12 IST" duration-ms="2277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureBeforeClass -->
        <test-method signature="hardAssert1()[pri:0, instance:com.TestNg.HardAssertionTest@43bc63a3]" started-at="2023-09-27T11:17:12 IST" name="hardAssert1" finished-at="2023-09-27T11:17:12 IST" duration-ms="14" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [I] but found [S]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [I] but found [S]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.TestNg.HardAssertionTest.hardAssert1(HardAssertionTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert1 -->
        <test-method signature="hardAssert2()[pri:0, instance:com.TestNg.HardAssertionTest@43bc63a3]" started-at="2023-09-27T11:17:12 IST" name="hardAssert2" finished-at="2023-09-27T11:17:12 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at com.TestNg.HardAssertionTest.hardAssert2(HardAssertionTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert2 -->
        <test-method signature="hardAssert3()[pri:0, instance:com.TestNg.HardAssertionTest@43bc63a3]" started-at="2023-09-27T11:17:12 IST" name="hardAssert3" finished-at="2023-09-27T11:17:12 IST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertFalse(Assert.java:78)
at org.testng.Assert.assertFalse(Assert.java:88)
at com.TestNg.HardAssertionTest.hardAssert3(HardAssertionTest.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert3 -->
        <test-method signature="hardAssert4()[pri:0, instance:com.TestNg.HardAssertionTest@43bc63a3]" started-at="2023-09-27T11:17:12 IST" name="hardAssert4" finished-at="2023-09-27T11:17:12 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert4 -->
        <test-method signature="hardAssert5()[pri:0, instance:com.TestNg.HardAssertionTest@43bc63a3]" started-at="2023-09-27T11:17:12 IST" name="hardAssert5" finished-at="2023-09-27T11:17:12 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Hard assert failings]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Hard assert failings
at org.testng.Assert.fail(Assert.java:110)
at com.TestNg.HardAssertionTest.hardAssert5(HardAssertionTest.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert5 -->
        <test-method signature="hardAssert6()[pri:0, instance:com.TestNg.HardAssertionTest@43bc63a3]" started-at="2023-09-27T11:17:12 IST" name="hardAssert6" finished-at="2023-09-27T11:17:12 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert6 -->
        <test-method is-config="true" signature="configureAfterClass()[pri:0, instance:com.TestNg.HardAssertionTest@43bc63a3]" started-at="2023-09-27T11:17:12 IST" name="configureAfterClass" finished-at="2023-09-27T11:17:13 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureAfterClass -->
      </class> <!-- com.TestNg.HardAssertionTest -->
      <class name="com.TestNg.ExecutionOrderTest">
        <test-method is-config="true" signature="beforeTest1()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="beforeTest1" finished-at="2023-09-27T11:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest1 -->
        <test-method is-config="true" signature="beforeClass1()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="beforeClass1" finished-at="2023-09-27T11:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass1 -->
        <test-method is-config="true" signature="beforeMethod1()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="beforeMethod1" finished-at="2023-09-27T11:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod1 -->
        <test-method is-config="true" signature="beforeMethod2()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="beforeMethod2" finished-at="2023-09-27T11:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method is-config="true" signature="beforeMethod3()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="beforeMethod3" finished-at="2023-09-27T11:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod3 -->
        <test-method signature="test1()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="test1" finished-at="2023-09-27T11:17:10 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod1()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="afterMethod1" finished-at="2023-09-27T11:17:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method is-config="true" signature="afterMethod2()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="afterMethod2" finished-at="2023-09-27T11:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod2 -->
        <test-method is-config="true" signature="beforeMethod1()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="beforeMethod1" finished-at="2023-09-27T11:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod1 -->
        <test-method is-config="true" signature="beforeMethod2()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="beforeMethod2" finished-at="2023-09-27T11:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method signature="test2()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="test2" finished-at="2023-09-27T11:17:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod3()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="beforeMethod3" finished-at="2023-09-27T11:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod3 -->
        <test-method is-config="true" signature="afterMethod1()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="afterMethod1" finished-at="2023-09-27T11:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method is-config="true" signature="afterMethod2()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="afterMethod2" finished-at="2023-09-27T11:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod2 -->
        <test-method is-config="true" signature="afterClass1()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:10 IST" name="afterClass1" finished-at="2023-09-27T11:17:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass1 -->
        <test-method is-config="true" signature="afterTest1()[pri:0, instance:com.TestNg.ExecutionOrderTest@6a78afa0]" started-at="2023-09-27T11:17:13 IST" name="afterTest1" finished-at="2023-09-27T11:17:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest1 -->
      </class> <!-- com.TestNg.ExecutionOrderTest -->
    </test> <!-- TestRunner-1 -->
    <test started-at="2023-09-27T11:17:13 IST" name="TestRunner-2" finished-at="2023-09-27T11:17:14 IST" duration-ms="1478">
      <class name="com.TestNg.HardAssertionTest">
        <test-method is-config="true" signature="configureBeforeSuite()[pri:0, instance:com.TestNg.HardAssertionTest@45c7e403]" started-at="2023-09-27T11:17:10 IST" name="configureBeforeSuite" finished-at="2023-09-27T11:17:10 IST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureBeforeSuite -->
        <test-method is-config="true" signature="configureBeforeClass()[pri:0, instance:com.TestNg.HardAssertionTest@45c7e403]" started-at="2023-09-27T11:17:13 IST" name="configureBeforeClass" finished-at="2023-09-27T11:17:14 IST" duration-ms="1318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureBeforeClass -->
        <test-method signature="hardAssert1()[pri:0, instance:com.TestNg.HardAssertionTest@45c7e403]" started-at="2023-09-27T11:17:14 IST" name="hardAssert1" finished-at="2023-09-27T11:17:14 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [I] but found [S]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [I] but found [S]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.TestNg.HardAssertionTest.hardAssert1(HardAssertionTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert1 -->
        <test-method signature="hardAssert2()[pri:0, instance:com.TestNg.HardAssertionTest@45c7e403]" started-at="2023-09-27T11:17:14 IST" name="hardAssert2" finished-at="2023-09-27T11:17:14 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at com.TestNg.HardAssertionTest.hardAssert2(HardAssertionTest.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert2 -->
        <test-method signature="hardAssert3()[pri:0, instance:com.TestNg.HardAssertionTest@45c7e403]" started-at="2023-09-27T11:17:14 IST" name="hardAssert3" finished-at="2023-09-27T11:17:14 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertFalse(Assert.java:78)
at org.testng.Assert.assertFalse(Assert.java:88)
at com.TestNg.HardAssertionTest.hardAssert3(HardAssertionTest.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert3 -->
        <test-method signature="hardAssert4()[pri:0, instance:com.TestNg.HardAssertionTest@45c7e403]" started-at="2023-09-27T11:17:14 IST" name="hardAssert4" finished-at="2023-09-27T11:17:14 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert4 -->
        <test-method signature="hardAssert5()[pri:0, instance:com.TestNg.HardAssertionTest@45c7e403]" started-at="2023-09-27T11:17:14 IST" name="hardAssert5" finished-at="2023-09-27T11:17:14 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Hard assert failings]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Hard assert failings
at org.testng.Assert.fail(Assert.java:110)
at com.TestNg.HardAssertionTest.hardAssert5(HardAssertionTest.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert5 -->
        <test-method signature="hardAssert6()[pri:0, instance:com.TestNg.HardAssertionTest@45c7e403]" started-at="2023-09-27T11:17:14 IST" name="hardAssert6" finished-at="2023-09-27T11:17:14 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hardAssert6 -->
        <test-method is-config="true" signature="configureAfterClass()[pri:0, instance:com.TestNg.HardAssertionTest@45c7e403]" started-at="2023-09-27T11:17:14 IST" name="configureAfterClass" finished-at="2023-09-27T11:17:14 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureAfterClass -->
        <test-method is-config="true" signature="configureAfterSuite()[pri:0, instance:com.TestNg.HardAssertionTest@45c7e403]" started-at="2023-09-27T11:17:14 IST" name="configureAfterSuite" finished-at="2023-09-27T11:17:14 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureAfterSuite -->
      </class> <!-- com.TestNg.HardAssertionTest -->
      <class name="com.TestNg.ExecutionOrderTest">
        <test-method is-config="true" signature="beforeSuite1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:10 IST" name="beforeSuite1" finished-at="2023-09-27T11:17:10 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite1 -->
        <test-method is-config="true" signature="beforeTest1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="beforeTest1" finished-at="2023-09-27T11:17:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest1 -->
        <test-method is-config="true" signature="beforeMethod1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="beforeMethod1" finished-at="2023-09-27T11:17:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod1 -->
        <test-method is-config="true" signature="beforeClass1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="beforeClass1" finished-at="2023-09-27T11:17:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass1 -->
        <test-method signature="test1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="test1" finished-at="2023-09-27T11:17:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="beforeMethod3()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="beforeMethod3" finished-at="2023-09-27T11:17:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod3 -->
        <test-method is-config="true" signature="beforeMethod2()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="beforeMethod2" finished-at="2023-09-27T11:17:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method is-config="true" signature="afterMethod2()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="afterMethod2" finished-at="2023-09-27T11:17:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod2 -->
        <test-method is-config="true" signature="afterMethod1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="afterMethod1" finished-at="2023-09-27T11:17:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method signature="test2()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="test2" finished-at="2023-09-27T11:17:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod2()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="beforeMethod2" finished-at="2023-09-27T11:17:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method is-config="true" signature="beforeMethod3()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="beforeMethod3" finished-at="2023-09-27T11:17:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod3 -->
        <test-method is-config="true" signature="beforeMethod1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="beforeMethod1" finished-at="2023-09-27T11:17:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod1 -->
        <test-method is-config="true" signature="afterMethod2()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="afterMethod2" finished-at="2023-09-27T11:17:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod2 -->
        <test-method is-config="true" signature="afterClass1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="afterClass1" finished-at="2023-09-27T11:17:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass1 -->
        <test-method is-config="true" signature="afterMethod1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:13 IST" name="afterMethod1" finished-at="2023-09-27T11:17:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod1 -->
        <test-method is-config="true" signature="afterTest1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:14 IST" name="afterTest1" finished-at="2023-09-27T11:17:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest1 -->
        <test-method is-config="true" signature="afterSuite1()[pri:0, instance:com.TestNg.ExecutionOrderTest@2925bf5b]" started-at="2023-09-27T11:17:14 IST" name="afterSuite1" finished-at="2023-09-27T11:17:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite1 -->
      </class> <!-- com.TestNg.ExecutionOrderTest -->
    </test> <!-- TestRunner-2 -->
  </suite> <!-- Suite -->
</testng-results>
